CREATE TABLE SECTION (
    SID INT NOT NULL PRIMARY KEY,
    SNAME CHAR(5) NOT NULL
);

CREATE TABLE CUSTOMER (
    CID INT NOT NULL PRIMARY KEY,
    CNAME CHAR(20) NOT NULL,
    PHONE CHAR(15),
    SSM CHAR(15),
    EMAIL CHAR(30),
    SEX CHAR(5),
    AGE INT,
    ADDRESS CHAR(50),
    CTYPE ENUM('학생', '교원', '직원','그 외') NOT NULL,
    CPOINT INT,
    AGREEMENT DATE
);

CREATE TABLE INGREDIENT (
    INAME CHAR(10) NOT NULL PRIMARY KEY,
    ORIGIN CHAR(10) NOT NULL
);

CREATE TABLE MENU (
    MID INT NOT NULL PRIMARY KEY,
    SID INT NOT NULL,
    MNAME CHAR(5) NOT NULL,
    EXPLANATION CHAR(10),
    KCAL CHAR(20),
    MPICTURE LONGBLOB,
    PRICE INT,
    MAINGREDIENT1 CHAR(10),
    MAINGREDIENT2 CHAR(10),
    FOREIGN KEY (SID) REFERENCES SECTION(SID),
    FOREIGN KEY (MAINGREDIENT1) REFERENCES INGREDIENT(INAME),
    FOREIGN KEY (MAINGREDIENT2) REFERENCES INGREDIENT(INAME)
);

CREATE TABLE ORDERBASIC (
    OBID INT NOT NULL PRIMARY KEY,
    CID INT NOT NULL,
    TOTALAMOUNT INT,
    POINTUSEAMOUNT INT,
    ORDERDATE DATE,
    ORDERTYPE ENUM('포장&수저포크O', '포장&수저포크X', '매장') NOT NULL,
    PAYMENTTYPE ENUM('카드', '현장결제') NOT NULL,
    FOREIGN KEY (CID) REFERENCES CUSTOMER(CID)
);

CREATE TABLE ORDERDETAIL (
    ODDID INT NOT NULL PRIMARY KEY,
    MID INT NOT NULL,
    OBID INT NOT NULL,
    COUNT INT,
    REQUEST CHAR(50),
    WAITNUMBER INT,
    FOREIGN KEY (MID) REFERENCES MENU(MID),
    FOREIGN KEY (OBID) REFERENCES ORDERBASIC(OBID)
);

CREATE TABLE REVIEW (
    RID INT NOT NULL PRIMARY KEY,
    ODDID INT NOT NULL,
    RDATE DATE,
    CONTENTS CHAR(50),
    STAR INT CHECK (STAR BETWEEN 1 AND 5), -- 조건 1 반영
    RPICTURE LONGBLOB,
    FOREIGN KEY (ODDID) REFERENCES ORDERDETAIL(ODDID)
);

CREATE TABLE POINT (
    PID INT NOT NULL PRIMARY KEY,
    CID INT NOT NULL,
    OBID INT NOT NULL,
    RID INT,
    PCHANGEDTYPE ENUM('리뷰 작성', '메뉴 주문', '포인트 사용') NOT NULL,
    PCHANGEAMOUNT INT,
    PCHANGEDDATE DATE,
    FOREIGN KEY (CID) REFERENCES CUSTOMER(CID),
    FOREIGN KEY (OBID) REFERENCES ORDERBASIC(OBID),
    FOREIGN KEY (RID) REFERENCES REVIEW(RID)
);


DELIMITER //

CREATE TRIGGER check_point_use
BEFORE INSERT ON ORDERBASIC
FOR EACH ROW
BEGIN
    DECLARE available_points INT;
    
    -- 고객의 현재 보유 포인트 조회
    SELECT CPOINT INTO available_points FROM CUSTOMER WHERE CID = NEW.CID;
    
    -- 사용하려는 포인트가 보유 포인트보다 많은지 검사
    IF NEW.POINTUSEAMOUNT > available_points THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = '포인트가 부족합니다!';
    END IF;
END;
//

DELIMITER ;


DELIMITER //

DROP TRIGGER check_review_time;

DELIMITER //

CREATE TRIGGER check_review_time
BEFORE INSERT ON REVIEW
FOR EACH ROW
BEGIN
    DECLARE order_date DATE;
    
    -- 주문 날짜 조회
    SELECT ORDERDATE INTO order_date 
    FROM ORDERBASIC 
    WHERE OBID = (SELECT OBID FROM ORDERDETAIL WHERE ODDID = NEW.ODDID);
    
    -- 리뷰 작성 시점이 주문 날짜로부터 24시간 이내인지 검사
    IF TIMESTAMPDIFF(HOUR, order_date, NEW.RDATE) > 24 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = '주문한 지 24시간 이내에만 리뷰를 작성하실 수 있습니다!';
    END IF;
END;
//

DELIMITER ;




